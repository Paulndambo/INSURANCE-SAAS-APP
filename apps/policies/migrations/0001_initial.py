# Generated by Django 4.1.1 on 2023-06-15 12:51

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CancellationNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=254, null=True)),
                ("mobile_number", models.CharField(max_length=255, null=True)),
                ("notification_send", models.BooleanField(default=False)),
                ("policy_type", models.CharField(max_length=255, null=True)),
                ("product", models.CharField(max_length=255, null=True)),
                ("is_fake_email", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Cycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("created", "Created"),
                            ("active", "Active"),
                            ("cancelled", "Cancelled"),
                            ("lapsed", "Lapsed"),
                            ("inactive", "Incative"),
                            ("ntu", "Not Taken Up"),
                            ("expired", "Expired"),
                            ("awaiting_payment", "Awaiting Payment"),
                        ],
                        default="draft",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CycleStatusUpdates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "previous_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("created", "Created"),
                            ("active", "Active"),
                            ("cancelled", "Cancelled"),
                            ("lapsed", "Lapsed"),
                            ("inactive", "Incative"),
                            ("ntu", "Not Taken Up"),
                            ("expired", "Expired"),
                            ("awaiting_payment", "Awaiting Payment"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "next_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("created", "Created"),
                            ("active", "Active"),
                            ("cancelled", "Cancelled"),
                            ("lapsed", "Lapsed"),
                            ("inactive", "Incative"),
                            ("ntu", "Not Taken Up"),
                            ("expired", "Expired"),
                            ("awaiting_payment", "Awaiting Payment"),
                        ],
                        max_length=255,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LapseNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=254, null=True)),
                ("mobile_number", models.CharField(max_length=255, null=True)),
                ("notification_send", models.BooleanField(default=False)),
                ("policy_type", models.CharField(max_length=255, null=True)),
                ("policy_number", models.CharField(max_length=255, null=True)),
                ("policy_status", models.CharField(max_length=255, null=True)),
                ("product", models.CharField(max_length=255, null=True)),
                ("premium_expected_date", models.DateField(null=True)),
                ("is_fake_email", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LapsePendingPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lapse_date", models.DateField(auto_now=True)),
                ("retry_on_date", models.DateField(null=True)),
                (
                    "retry_status",
                    models.CharField(
                        choices=[
                            ("error", "Error"),
                            ("failed", "Failed"),
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=32,
                    ),
                ),
                ("lapsed", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("policy_number", models.CharField(max_length=255, unique=True)),
                ("policy_name", models.CharField(max_length=255, null=True)),
                (
                    "policy_document",
                    models.FileField(null=True, upload_to="policy_documents"),
                ),
                (
                    "welcome_letter",
                    models.FileField(null=True, upload_to="policy_welcome_letters"),
                ),
                (
                    "amount",
                    models.FloatField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(limit_value=0)
                        ],
                    ),
                ),
                ("expiration_date", models.DateField(null=True)),
                ("start_date", models.DateField(null=True)),
                ("activation_date", models.DateField(null=True)),
                ("awaiting_payment_period", models.DateField(null=True)),
                (
                    "payment_due_day",
                    models.IntegerField(
                        default=2,
                        validators=[
                            django.core.validators.MinValueValidator(limit_value=0),
                            django.core.validators.MaxValueValidator(limit_value=31),
                        ],
                    ),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("biannual", "Biannual"),
                            ("yearly", "Yearly"),
                            ("single", "Single"),
                        ],
                        default="monthly",
                        max_length=255,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("lapsed", "Lapsed"),
                            ("cancelled", "Cancelled"),
                            ("ntu", "NTU"),
                            ("created", "Expired"),
                            ("awaiting_payment", "Awaiting Payment"),
                            ("draft", "Draft"),
                            ("incative", "Inactive"),
                        ],
                        default="created",
                        max_length=255,
                    ),
                ),
                (
                    "sub_status",
                    models.CharField(
                        choices=[("lapse_pending", "Lapse Pending")],
                        max_length=32,
                        null=True,
                    ),
                ),
                ("terms_and_conditions_accepted", models.BooleanField(default=True)),
                ("claim_lodging_awaiting_period", models.IntegerField(default=0)),
                ("lapse_date", models.DateField(null=True)),
                ("change_premium_reason", models.TextField(blank=True, null=True)),
                ("broker_information", models.CharField(max_length=255, null=True)),
                ("creator_information", models.CharField(max_length=255, null=True)),
                ("damage_reason_expiration", models.DateField(null=True)),
                ("signature", models.FileField(null=True, upload_to="signatures/")),
                ("proxy_purchase", models.BooleanField(default=False)),
                (
                    "terms_and_conditions",
                    models.FileField(null=True, upload_to="terms_conditions"),
                ),
                ("is_group_policy", models.BooleanField(default=False)),
                ("payment_reference", models.CharField(max_length=100, null=True)),
                ("dg_required", models.BooleanField(default=True)),
                ("policy_number_counter", models.IntegerField(default=0)),
                ("config", models.JSONField(default=dict)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PolicyCancellation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("confirmed", "Confirmed"),
                            ("pending", "Pending"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=32,
                    ),
                ),
                (
                    "cancellation_origin",
                    models.CharField(
                        choices=[("customer", "Customer"), ("insurer", "Insurer")],
                        default="customer",
                        max_length=32,
                    ),
                ),
                ("phone_number", models.CharField(max_length=255, null=True)),
                ("bank_account", models.CharField(max_length=255, null=True)),
                ("branch_code", models.CharField(max_length=255, null=True)),
                ("bank", models.CharField(max_length=255, null=True)),
                ("cancel_reason", models.TextField(blank=True, null=True)),
                ("policy_previous_status", models.CharField(max_length=255)),
                ("refund_amount", models.FloatField(default=0)),
                (
                    "payment_reference",
                    models.FileField(null=True, upload_to="payment_references/"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PolicyDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("extra_premium", models.FloatField(default=0)),
                ("funeral_policy_details", models.JSONField(default=dict)),
                ("activation_details", models.JSONField(default=dict)),
                (
                    "cover_level",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("cancellation_date", models.DateField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RefundRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=32,
                    ),
                ),
                ("phone_number", models.CharField(max_length=255, null=True)),
                ("bank_account", models.CharField(max_length=255, null=True)),
                ("branch_code", models.CharField(max_length=255, null=True)),
                ("bank", models.CharField(max_length=255, null=True)),
                ("refund_amount", models.FloatField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
