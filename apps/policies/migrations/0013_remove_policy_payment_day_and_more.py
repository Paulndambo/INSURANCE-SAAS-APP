# Generated by Django 4.1.1 on 2023-05-15 10:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("products", "0002_alter_product_product_type"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("users", "0009_remove_membership_status_remove_policyholder_country_and_more"),
        ("policies", "0012_policy_product"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="policy",
            name="payment_day",
        ),
        migrations.RemoveField(
            model_name="policy",
            name="policy_wording",
        ),
        migrations.RemoveField(
            model_name="policy",
            name="product",
        ),
        migrations.RemoveField(
            model_name="policycancellation",
            name="cancellation_status",
        ),
        migrations.RemoveField(
            model_name="policycancellation",
            name="policy_next_status",
        ),
        migrations.AddField(
            model_name="policy",
            name="amount",
            field=models.FloatField(
                default=0,
                validators=[django.core.validators.MinValueValidator(limit_value=0)],
            ),
        ),
        migrations.AddField(
            model_name="policy",
            name="awaiting_payment_period",
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="broker",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="broker_policies",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="policy",
            name="broker_information",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="change_premium_reason",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="claim_lodging_awaiting_period",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="policy",
            name="config",
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name="policy",
            name="creator",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="policy",
            name="creator_information",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="damage_reason_expiration",
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="expiration_date",
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="insurance_product",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="policy",
            name="is_group_policy",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="policy",
            name="payment_due_day",
            field=models.IntegerField(
                default=2,
                validators=[
                    django.core.validators.MinValueValidator(limit_value=0),
                    django.core.validators.MaxValueValidator(limit_value=31),
                ],
            ),
        ),
        migrations.AddField(
            model_name="policy",
            name="payment_frequency",
            field=models.CharField(
                choices=[
                    ("weekly", "Weekly"),
                    ("monthly", "Monthly"),
                    ("quarterly", "Quarterly"),
                    ("biannual", "Biannual"),
                    ("yearly", "Yearly"),
                    ("single", "Single"),
                ],
                default="monthly",
                max_length=255,
            ),
        ),
        migrations.AddField(
            model_name="policy",
            name="payment_reference",
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="policy_name",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="policy_number_counter",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="policy",
            name="proxy_purchase",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="policy",
            name="signature",
            field=models.FileField(null=True, upload_to="signatures/"),
        ),
        migrations.AddField(
            model_name="policy",
            name="terms_and_conditions",
            field=models.FileField(null=True, upload_to="terms_conditions"),
        ),
        migrations.AddField(
            model_name="policy",
            name="terms_and_conditions_accepted",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="policy",
            name="upgraded_policy",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="policies.policy",
            ),
        ),
        migrations.AddField(
            model_name="policycancellation",
            name="bank",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="policycancellation",
            name="bank_account",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="policycancellation",
            name="branch_code",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="policycancellation",
            name="cancel_reason",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="policycancellation",
            name="payment_reference",
            field=models.FileField(null=True, upload_to="payment_references/"),
        ),
        migrations.AddField(
            model_name="policycancellation",
            name="phone_number",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="policycancellation",
            name="refund_amount",
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name="policycancellation",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("confirmed", "Confirmed"),
                    ("refunded", "Refunded"),
                    ("cancelled", "Cancelled"),
                ],
                default="pending",
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name="policy",
            name="activation_date",
            field=models.DateField(null=True),
        ),
        migrations.AlterField(
            model_name="policy",
            name="lapse_date",
            field=models.DateField(null=True),
        ),
        migrations.AlterField(
            model_name="policy",
            name="policy_document",
            field=models.FileField(null=True, upload_to="policy_documents"),
        ),
        migrations.AlterField(
            model_name="policy",
            name="policy_number",
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name="policy",
            name="start_date",
            field=models.DateField(null=True),
        ),
        migrations.AlterField(
            model_name="policy",
            name="status",
            field=models.CharField(
                choices=[
                    ("active", "Active"),
                    ("lapsed", "Lapsed"),
                    ("cancelled", "Cancelled"),
                    ("ntu", "NTU"),
                    ("created", "Expired"),
                    ("awaiting_payment", "Awaiting Payment"),
                    ("draft", "Draft"),
                    ("incative", "Inactive"),
                ],
                default="created",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="policy",
            name="sub_status",
            field=models.CharField(
                choices=[("lapse_pending", "Lapse Pending")], max_length=32, null=True
            ),
        ),
        migrations.AlterField(
            model_name="policy",
            name="welcome_letter",
            field=models.FileField(null=True, upload_to="policy_welcome_letters"),
        ),
        migrations.AlterField(
            model_name="policycancellation",
            name="cancellation_origin",
            field=models.CharField(
                choices=[("customer", "Customer"), ("insurer", "Insurer")],
                default="customer",
                max_length=32,
            ),
        ),
        migrations.CreateModel(
            name="RefundRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=32,
                    ),
                ),
                ("phone_number", models.CharField(max_length=255, null=True)),
                ("bank_account", models.CharField(max_length=255, null=True)),
                ("branch_code", models.CharField(max_length=255, null=True)),
                ("bank", models.CharField(max_length=255, null=True)),
                ("refund_amount", models.FloatField(default=0)),
                (
                    "membership",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.membership",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PolicyDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("extra_premium", models.FloatField(default=0)),
                ("funeral_policy_details", models.JSONField(default=dict)),
                ("activation_details", models.JSONField(default=dict)),
                ("cover_level", models.DecimalField(decimal_places=2, max_digits=10)),
                ("cancellation_date", models.DateField(null=True)),
                (
                    "policy",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="policy_details",
                        to="policies.policy",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LapsePendingPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lapse_date", models.DateField(auto_now=True)),
                ("retry_on_date", models.DateField(null=True)),
                (
                    "retry_status",
                    models.CharField(
                        choices=[
                            ("error", "Error"),
                            ("failed", "Failed"),
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=32,
                    ),
                ),
                ("lapsed", models.BooleanField(default=False)),
                (
                    "actioned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "policy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lapse_details",
                        to="policies.policy",
                    ),
                ),
            ],
        ),
    ]
